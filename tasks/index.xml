<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tasks on Secure Foundation</title>
    <link>https://securefoundation.github.io/tasks/index.xml</link>
    <description>Recent content in Tasks on Secure Foundation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://securefoundation.github.io/tasks/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Content Security Policy</title>
      <link>https://securefoundation.github.io/tasks/content-security-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://securefoundation.github.io/tasks/content-security-policy/</guid>
      <description>

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;Content Security Policy limits the resources that a web browser will
load, making it more difficult for attackers to carry out a
&lt;a href=&#34;https://www.owasp.org/index.php/Cross-site_Scripting_%28XSS%29&#34;&gt;Cross Site Scripting&lt;/a&gt;
attack.&lt;/p&gt;

&lt;p&gt;When enabling CSP, we can define a whitelist of resources that the
browser will load. Any resources (even including inline scripts) that
are not explicitly enabled in the whitelist will be blocked by the browser.&lt;/p&gt;

&lt;p&gt;As an &lt;a href=&#34;https://blogs.technet.microsoft.com/srd/2013/09/27/software-defense-series-exploit-mitigation-and-vulnerability-detection/&#34;&gt;exploit mitigation&lt;/a&gt;,
it&amp;rsquo;s important to remember that while CSP makes exploitation more
difficult, it does not prevent the bugs that make an exploit possible
in the first place (lack of appropriate
encoding/sanitization). Therefore, its protection will never be
complete, and people will continue to find bypasses for even the most
rigerous policies. That said, it&amp;rsquo;s an important part of a Defense in
Depth strategy for any web application.&lt;/p&gt;

&lt;h2 id=&#34;acceptance-criteria&#34;&gt;Acceptance Criteria&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A policy is created that blocks any resources not required by the application&lt;/li&gt;
&lt;li&gt;The policy is enabled via the &lt;code&gt;Content-Security-Policy&lt;/code&gt; header&lt;/li&gt;
&lt;li&gt;An api or service is created to parse CSP reports&lt;/li&gt;
&lt;li&gt;Reporting is enabled via the &lt;code&gt;report-uri&lt;/code&gt; directive&lt;/li&gt;
&lt;li&gt;The team understands what limitations CSP adds, and how to check for violations&lt;/li&gt;
&lt;li&gt;The team has a process for updating the policy as requirements change&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://scotthelme.co.uk/content-security-policy-an-introduction/&#34;&gt;https://scotthelme.co.uk/content-security-policy-an-introduction/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/security/csp/&#34;&gt;https://developers.google.com/web/fundamentals/security/csp/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>